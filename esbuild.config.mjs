import esbuild from "esbuild";
import cssModulesPlugin from "esbuild-css-modules-plugin";

import process from "process";
import builtins from "builtin-modules";
import path from "path";
import { postBuildPlugin } from "./build/postBuildPlugin.mjs";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/`;

// 方便直接调试, 具体打包输出路径可自行更改
// 注意：与 manifest.json 的 id 保持一致，以便 Hot Reload 正确监听
export const outdir = path.resolve(process.cwd(), "../knowledge/PARA/.obsidian/plugins/mcp-chat-yoran");
const prod = (process.argv[2] === 'production');


// esbuild 配置（context 部分）
const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	// 扁平化输出，避免生成 outdir/src/*
	outbase: ".",
	entryNames: "[name]",
	assetNames: "[name]",
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outdir,
	jsx: "automatic",
	jsxImportSource: "react",
	// 添加 CSS 加载器
	loader: {
		".css": "css",
		".tsx": "tsx",
		".ts": "ts"
	},
	plugins: [
		cssModulesPlugin({
			inject: false,
			cssOutputFile: "styles.modules.css"
		}),
		postBuildPlugin
	]
});


if (prod) {
  await context.rebuild();
  process.exit(0);
} else {
  await context.rebuild();
  await context.watch();
}
